/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Decimal = string
export interface InstantiateMsg {
  dao?: string | null
  delegation_validity_blocks?: number | null
  no_sync_proposal_modules?: boolean | null
  vp_cap_percent?: Decimal | null
  vp_hook_callers?: string[] | null
}
export type ExecuteMsg =
  | {
      register: {}
    }
  | {
      unregister: {}
    }
  | {
      delegate: {
        delegate: string
        percent: Decimal
      }
    }
  | {
      undelegate: {
        delegate: string
      }
    }
  | {
      update_voting_power_hook_callers: {
        add?: string[] | null
        remove?: string[] | null
      }
    }
  | {
      sync_proposal_modules: {
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      update_config: {
        delegation_validity_blocks: OptionalUpdateForUint64
        vp_cap_percent: OptionalUpdateForDecimal
      }
    }
  | {
      member_changed_hook: MemberChangedHookMsg
    }
  | {
      nft_stake_change_hook: NftStakeChangedHookMsg
    }
  | {
      stake_change_hook: StakeChangedHookMsg
    }
  | {
      vote_hook: VoteHookMsg
    }
export type OptionalUpdateForUint64 = UpdateForUint64 | null
export type UpdateForUint64 =
  | 'clear'
  | {
      set: number
    }
export type OptionalUpdateForDecimal = UpdateForDecimal | null
export type UpdateForDecimal =
  | 'clear'
  | {
      set: Decimal
    }
export type NftStakeChangedHookMsg =
  | {
      stake: {
        addr: Addr
        token_id: string
      }
    }
  | {
      unstake: {
        addr: Addr
        token_ids: string[]
      }
    }
export type Addr = string
export type StakeChangedHookMsg =
  | {
      stake: {
        addr: Addr
        amount: Uint128
      }
    }
  | {
      unstake: {
        addr: Addr
        amount: Uint128
      }
    }
export type Uint128 = string
export type VoteHookMsg = {
  new_vote: {
    height: number
    is_first_vote: boolean
    power: Uint128
    proposal_id: number
    vote: string
    voter: string
  }
}
export interface MemberChangedHookMsg {
  diffs: MemberDiff[]
}
export interface MemberDiff {
  key: string
  new?: number | null
  old?: number | null
}
export type QueryMsg =
  | {
      info: {}
    }
  | {
      registration: {
        delegate: string
        height?: number | null
      }
    }
  | {
      delegates: {
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      delegations: {
        delegator: string
        height?: number | null
        limit?: number | null
        offset?: number | null
      }
    }
  | {
      unvoted_delegated_voting_power: {
        delegate: string
        height: number
        proposal_id: number
        proposal_module: string
      }
    }
  | {
      proposal_modules: {
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      voting_power_hook_callers: {
        limit?: number | null
        start_after?: string | null
      }
    }
export interface MigrateMsg {}
export interface DelegatesResponse {
  delegates: DelegateResponse[]
}
export interface DelegateResponse {
  delegate: Addr
  power: Uint128
}
export interface DelegationsResponse {
  delegations: DelegationResponse[]
  height: number
}
export interface DelegationResponse {
  active: boolean
  delegate: Addr
  percent: Decimal
}
export interface InfoResponse {
  info: ContractVersion
}
export interface ContractVersion {
  contract: string
  version: string
}
export type ArrayOfAddr = Addr[]
export interface RegistrationResponse {
  height: number
  power: Uint128
  registered: boolean
}
export interface UnvotedDelegatedVotingPowerResponse {
  effective: Uint128
  total: Uint128
}
