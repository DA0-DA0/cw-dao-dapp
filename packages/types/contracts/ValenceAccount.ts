/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {
  referral?: string | null
  services_manager: string
}
export type ExecuteMsg =
  | {
      register_to_service: {
        data?: Binary | null
        service_name: ValenceServices
      }
    }
  | {
      deregister_from_service: {
        service_name: ValenceServices
      }
    }
  | {
      update_service: {
        data: Binary
        service_name: ValenceServices
      }
    }
  | {
      pause_service: {
        reason?: string | null
        service_name: ValenceServices
      }
    }
  | {
      resume_service: {
        service_name: ValenceServices
      }
    }
  | {
      send_funds_by_service: {
        atomic: boolean
        msgs: CosmosMsgForEmpty[]
      }
    }
  | {
      execute_by_service: {
        atomic: boolean
        msgs: CosmosMsgForEmpty[]
      }
    }
  | {
      execute_by_admin: {
        msgs: CosmosMsgForEmpty[]
      }
    }
  | {
      start_admin_change: {
        addr: string
        expiration: Expiration
      }
    }
  | {
      cancel_admin_change: {}
    }
  | {
      approve_admin_change: {}
    }
export type Binary = string
export type ValenceServices = 'rebalancer'
export type CosmosMsgForEmpty =
  | {
      bank: BankMsg
    }
  | {
      custom: Empty
    }
  | {
      stargate: {
        type_url: string
        value: Binary
      }
    }
  | {
      ibc: IbcMsg
    }
  | {
      wasm: WasmMsg
    }
  | {
      gov: GovMsg
    }
export type BankMsg =
  | {
      send: {
        amount: Coin[]
        to_address: string
      }
    }
  | {
      burn: {
        amount: Coin[]
      }
    }
export type Uint128 = string
export type IbcMsg =
  | {
      transfer: {
        amount: Coin
        channel_id: string
        timeout: IbcTimeout
        to_address: string
      }
    }
  | {
      send_packet: {
        channel_id: string
        data: Binary
        timeout: IbcTimeout
      }
    }
  | {
      close_channel: {
        channel_id: string
      }
    }
export type Timestamp = Uint64
export type Uint64 = string
export type WasmMsg =
  | {
      execute: {
        contract_addr: string
        funds: Coin[]
        msg: Binary
      }
    }
  | {
      instantiate: {
        admin?: string | null
        code_id: number
        funds: Coin[]
        label: string
        msg: Binary
      }
    }
  | {
      migrate: {
        contract_addr: string
        msg: Binary
        new_code_id: number
      }
    }
  | {
      update_admin: {
        admin: string
        contract_addr: string
      }
    }
  | {
      clear_admin: {
        contract_addr: string
      }
    }
export type GovMsg = {
  vote: {
    proposal_id: number
    vote: VoteOption
  }
}
export type VoteOption = 'yes' | 'no' | 'abstain' | 'no_with_veto'
export type Expiration =
  | {
      at_height: number
    }
  | {
      at_time: Timestamp
    }
  | {
      never: {}
    }
export interface Coin {
  amount: Uint128
  denom: string
}
export interface Empty {}
export interface IbcTimeout {
  block?: IbcTimeoutBlock | null
  timestamp?: Timestamp | null
}
export interface IbcTimeoutBlock {
  height: number
  revision: number
}
export type QueryMsg = 'get_admin'
export type Addr = string
